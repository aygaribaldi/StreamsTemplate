{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex Garibaldi\\\\Documents\\\\CAREERRESOURCES\\\\AMAZON\\\\ModernReactwithRedux\\\\streams\\\\client\\\\src\\\\components\\\\Streams\\\\StreamEdit.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchStream, editStream } from \"../../actions\";\nimport StreamForm from \"./StreamForm\";\nimport _ from \"lodash\";\n\nclass StreamEdit extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onSubmit = formValues => {\n      this.props.editStream(this.props.match.params.id, formValues);\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  render() {\n    if (!this.props.stream) return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 36\n      }\n    }, \"Loading...\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }\n    }, \"Edit a Stream\"), /*#__PURE__*/React.createElement(StreamForm, {\n      initialValues: _.pick(this.props.stream, \"title\", \"description\"),\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }\n    }));\n  }\n\n} //ownProps shows up inside of the StreamDelete\n\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream,\n  editStream\n})(StreamEdit);","map":{"version":3,"sources":["C:/Users/Alex Garibaldi/Documents/CAREERRESOURCES/AMAZON/ModernReactwithRedux/streams/client/src/components/Streams/StreamEdit.js"],"names":["React","connect","fetchStream","editStream","StreamForm","_","StreamEdit","Component","onSubmit","formValues","props","match","params","id","componentDidMount","render","stream","pick","mapStateToProps","state","ownProps","streams"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,eAAxC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,CAAP,MAAc,QAAd;;AAEA,MAAMC,UAAN,SAAyBN,KAAK,CAACO,SAA/B,CAAyC;AAAA;AAAA;;AAAA,SAKvCC,QALuC,GAK3BC,UAAD,IAAgB;AACzB,WAAKC,KAAL,CAAWP,UAAX,CAAsB,KAAKO,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA9C,EAAkDJ,UAAlD;AACD,KAPsC;AAAA;;AACvCK,EAAAA,iBAAiB,GAAG;AAClB,SAAKJ,KAAL,CAAWR,WAAX,CAAuB,KAAKQ,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACD;;AAKDE,EAAAA,MAAM,GAAG;AACP,QAAI,CAAC,KAAKL,KAAL,CAAWM,MAAhB,EAAwB,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACxB,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAEE,oBAAC,UAAD;AACE,MAAA,aAAa,EAAEX,CAAC,CAACY,IAAF,CAAO,KAAKP,KAAL,CAAWM,MAAlB,EAA0B,OAA1B,EAAmC,aAAnC,CADjB;AAEE,MAAA,QAAQ,EAAE,KAAKR,QAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AASD;;AAnBsC,C,CAsBzC;;;AACA,MAAMU,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,SAAO;AAAEJ,IAAAA,MAAM,EAAEG,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACT,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AAAV,GAAP;AACD,CAFD;;AAIA,eAAeZ,OAAO,CAACiB,eAAD,EAAkB;AAAEhB,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAlB,CAAP,CACbG,UADa,CAAf","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchStream, editStream } from \"../../actions\";\r\nimport StreamForm from \"./StreamForm\";\r\nimport _ from \"lodash\";\r\n\r\nclass StreamEdit extends React.Component {\r\n  componentDidMount() {\r\n    this.props.fetchStream(this.props.match.params.id);\r\n  }\r\n\r\n  onSubmit = (formValues) => {\r\n    this.props.editStream(this.props.match.params.id, formValues);\r\n  };\r\n  render() {\r\n    if (!this.props.stream) return <div>Loading...</div>;\r\n    return (\r\n      <div>\r\n        <h3>Edit a Stream</h3>\r\n        <StreamForm\r\n          initialValues={_.pick(this.props.stream, \"title\", \"description\")}\r\n          onSubmit={this.onSubmit}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//ownProps shows up inside of the StreamDelete\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return { stream: state.streams[ownProps.match.params.id] };\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchStream, editStream })(\r\n  StreamEdit\r\n);\r\n"]},"metadata":{},"sourceType":"module"}