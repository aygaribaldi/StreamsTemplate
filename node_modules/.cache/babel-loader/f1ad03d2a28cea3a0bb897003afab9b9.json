{"ast":null,"code":"import _ from \"lodash\";\nimport { CREATE_STREAM, FETCH_STREAM, FETCH_STREAMS, EDIT_STREAM, DELETE_STREAM } from \"../actions/types\";\nexport default ((state = {}, action) => {\n  switch (action.type) {\n    case CREATE_STREAM:\n      return { ...state,\n        [action.payload.id]: action.payload\n      };\n\n    case FETCH_STREAM:\n      return { ...state,\n        [action.payload.id]: action.payload\n      };\n\n    case EDIT_STREAM:\n      return { ...state,\n        [action.payload.id]: action.payload\n      };\n\n    case DELETE_STREAM:\n      return __dirname.omit(state, action.payload);\n\n    case FETCH_STREAMS:\n      return { ...state,\n        ..._.mapKeys(action.payload, \"id\")\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:/Users/Alex Garibaldi/Documents/CAREERRESOURCES/AMAZON/ModernReactwithRedux/streams/client/src/reducers/streamReducer.js"],"names":["_","CREATE_STREAM","FETCH_STREAM","FETCH_STREAMS","EDIT_STREAM","DELETE_STREAM","state","action","type","payload","id","__dirname","omit","mapKeys"],"mappings":"AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,SACEC,aADF,EAEEC,YAFF,EAGEC,aAHF,EAIEC,WAJF,EAKEC,aALF,QAMO,kBANP;AAQA,gBAAe,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AACrC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,aAAL;AACE,aAAO,EAAE,GAAGK,KAAL;AAAY,SAACC,MAAM,CAACE,OAAP,CAAeC,EAAhB,GAAqBH,MAAM,CAACE;AAAxC,OAAP;;AACF,SAAKP,YAAL;AACE,aAAO,EAAE,GAAGI,KAAL;AAAY,SAACC,MAAM,CAACE,OAAP,CAAeC,EAAhB,GAAqBH,MAAM,CAACE;AAAxC,OAAP;;AACF,SAAKL,WAAL;AACE,aAAO,EAAE,GAAGE,KAAL;AAAY,SAACC,MAAM,CAACE,OAAP,CAAeC,EAAhB,GAAqBH,MAAM,CAACE;AAAxC,OAAP;;AACF,SAAKJ,aAAL;AACE,aAAOM,SAAS,CAACC,IAAV,CAAeN,KAAf,EAAsBC,MAAM,CAACE,OAA7B,CAAP;;AACF,SAAKN,aAAL;AACE,aAAO,EAAE,GAAGG,KAAL;AAAY,WAAGN,CAAC,CAACa,OAAF,CAAUN,MAAM,CAACE,OAAjB,EAA0B,IAA1B;AAAf,OAAP;;AACF;AACE,aAAOH,KAAP;AAZJ;AAcD,CAfD","sourcesContent":["import _ from \"lodash\";\r\nimport {\r\n  CREATE_STREAM,\r\n  FETCH_STREAM,\r\n  FETCH_STREAMS,\r\n  EDIT_STREAM,\r\n  DELETE_STREAM,\r\n} from \"../actions/types\";\r\n\r\nexport default (state = {}, action) => {\r\n  switch (action.type) {\r\n    case CREATE_STREAM:\r\n      return { ...state, [action.payload.id]: action.payload };\r\n    case FETCH_STREAM:\r\n      return { ...state, [action.payload.id]: action.payload };\r\n    case EDIT_STREAM:\r\n      return { ...state, [action.payload.id]: action.payload };\r\n    case DELETE_STREAM:\r\n      return __dirname.omit(state, action.payload);\r\n    case FETCH_STREAMS:\r\n      return { ...state, ..._.mapKeys(action.payload, \"id\") };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}